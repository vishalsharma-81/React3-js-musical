{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishal sharma\\\\Code Field\\\\React3js\\\\musical\\\\src\\\\components\\\\Player.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Song from \"./Song\";\nimport Controls from \"./Controls\";\nimport sample from \"../assets/sample.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const playPauseHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Song, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isPlaying: isPlaying,\n      playPauseHandler: playPauseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: sample\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Player, \"4LVZylOngeaGuZM9rB5Sj0PYDg8=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useState","Song","Controls","sample","jsxDEV","_jsxDEV","Player","_s","audioRef","isPlaying","setIsPlaying","playPauseHandler","current","pause","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","_c","$RefreshReg$"],"sources":["C:/Users/vishal sharma/Code Field/React3js/musical/src/components/Player.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Song from \"./Song\";\r\nimport Controls from \"./Controls\";\r\nimport sample from \"../assets/sample.mp3\";\r\n\r\nconst Player = () => {\r\n    const audioRef = useRef(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    const playPauseHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(false);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\r\n            <Song />\r\n            <Controls isPlaying={isPlaying} playPauseHandler={playPauseHandler} />\r\n            <audio ref={audioRef} src={sample}></audio>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIF,SAAS,EAAE;MACXD,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;MACxBH,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACHF,QAAQ,CAACI,OAAO,CAACE,IAAI,CAAC,CAAC;MACvBJ,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;EAED,oBACIL,OAAA;IAAKU,SAAS,EAAC,gEAAgE;IAAAC,QAAA,gBAC3EX,OAAA,CAACJ,IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRf,OAAA,CAACH,QAAQ;MAACO,SAAS,EAAEA,SAAU;MAACE,gBAAgB,EAAEA;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEf,OAAA;MAAOgB,GAAG,EAAEb,QAAS;MAACc,GAAG,EAAEnB;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd,CAAC;AAACb,EAAA,CArBID,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}